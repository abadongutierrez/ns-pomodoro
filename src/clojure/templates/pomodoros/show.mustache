{{> inner-header}}

    <style type="text/css">
        #countdown { width: 240px; height: 45px; }
        .pomodoro-resting {
            border: 1px solid #ccc;
            background-color: lightgreen;
        }
        .pomodoro-working  {
            border: 1px solid #ccc;
            background-color: lightcoral;
        }

        .timer {
            width:200px;
            margin-left:auto;
            margin-right: auto;
            margin-top: 10px;
            border:1px dotted gray;
                        
            /*font-family: 'Open Sans', sans-serif, Palatino;*/
            font-size: 32px;
            font-weight: 300;
            text-align: center;
            text-decoration: none;
            letter-spacing: 1px;

        }
    </style>

<div class="title-pomodoro">{{title}}</div>

<div class="total-pomodoros">Total pomodoros so far: {{total-pomodoros}}</div>

<div class="pomodoro-actions">
    <span id="current-pomodoro-button">
        <button type="button" id="start" class="btn btn-default btn-xs">
            <span class="glyphicon glyphicon-play"></span> Start Pomodoro
        </button>
    </span>
    <span id="next-pomodoro-button" style="display: none">
        <form action="/tasks/{{task.task_id}}/pomodoros" method="POST">
            <button type="submit" class="btn btn-default btn-xs">
                <span class="glyphicon glyphicon-time"></span> New Pomodoro
            </button>
        </form>
    </span>
</div>

<!-- HTML -->
<div id="countdown" class="timer pomodoro-working">00:00</div>

<script type="text/javascript" charset="utf-8">

function show(message) {
    notify.createNotification("NS Pomodoro Notification", {body:message, icon: "alert.ico"})
}

// Javascript
$(function() {
    var pomodoroId = null, //
        worker = null;

    if (notify.permissionLevel() === notify.PERMISSION_DEFAULT) {
        // ask user for permission
        notify.requestPermission(function() {
            //
        });
    }
    else if (notify.permissionLevel() === notify.PERMISSION_GRANTED) {
    }

    $('#start').click(function() {
        $('#start').fadeOut();
        $.post("/tasks/{{task.task_id}}/pomodoros/start", {}, function(data) {
            var currPomodorSpec = {
                task: {
                    id: data.data.pomodoro.task_id
                },
                pomodoro: {
                    id: data.data.pomodoro.pomodoro_id
                },
                workTimeLeft: data.data.work_time_left,
                restTimeLeft: data.data.rest_time_left
            };

            // create worker
            worker = new Worker("/js/pomodoroWorker.js");

            worker.addEventListener('message', function(event) {
                if (parseInt(event.data) == -1) {
                    alert('Pomodoro already finishied, please start a new one.');
                    $('#start').fadeIn();
                }
                else {
                    $("#countdown").text(event.data.timerStr);
                    if (event.data.timerStr === "00:00") {
                        if (event.data.type === "working") {
                            show("Pomodoro Finished!, take a rest.");
                        }
                        else if (event.data.type === "resting") {
                            show("Enough resting, go back to work.");
                            $('#start').fadeIn();
                        }
                    }
                }
            });

            // send initial message to worker and start
            worker.postMessage({pomodoroSpec: currPomodorSpec});
        }, "json");
    })
});
</script>

{{> inner-footer}}